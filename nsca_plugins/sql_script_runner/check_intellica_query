#!/bin/bash
###################################################################################################
#
# WARNING if query returns 0 rows, this script will behave unpredicably.
# There is a major need for path configuration. Currently this is hardcoded.
#
###################################################################################################
RUN_DIR_PATH=$PWD
QUERY_RUNNER_PATH="/home/nagios/evam_shared/nsca_plugins/sql_script_runner"

USAGE="`basename $0` [-q|--query]<queryID> [-w|--warning]<returnValue> [-wb|--warningBottom]<returnValue> [-c|--critical]<returnValue> [-cb|--criticalBottom]<returnValue>" 
THRESHOLD_USAGE="WARNING threshold must be smaller than CRITICAL: `basename $0` $*"
BOTTOM_THRESHOLD_USAGE="WARNING BOTTOM threshold must be bigger than CRITICAL BOTTOM: `basename $0` $*"

CRITICAL_THRESHOLD=""
WARNING_THRESHOLD=""
CRITICAL_BOTTOM=""
WARNING_BOTTOM=""
QUERY_ID=""
STATE_OK=0
STATE_WARNING=1
STATE_CRITICAL=2
STATE_UNKNOWN=3
# print usage
if [[ $# -lt 8 ]]
then
        echo ""
        echo "Wrong Syntax: `basename $0` $*"
        echo ""
        echo "Usage: $USAGE"
        echo ""
        exit 0
fi
# read input
while [[ $# -gt 0 ]]
  do
        case "$1" in
               -w|--warning)
               shift
               WARNING_THRESHOLD=$1
        ;;
               -c|--critical)
               shift
               CRITICAL_THRESHOLD=$1
        ;;
               -q|--query)
               shift
               QUERY_ID=$1
        ;;
               -cb|--criticalBottom)
               shift
               CRITICAL_BOTTOM=$1
        ;;
               -wb|--warningBottom)
               shift
               WARNING_BOTTOM=$1
        ;;
        esac
        shift
  done
# verify input
if [[ $WARNING_THRESHOLD -eq $CRITICAL_THRESHOLD || $CRITICAL_THRESHOLD -lt $WARNING_THRESHOLD ]]
then
        echo ""
        echo "$THRESHOLD_USAGE"
        echo ""
        echo "Usage: $USAGE"
        echo ""
        exit 0
fi
if [[ $WARNING_BOTTOM -eq $CRITICAL_BOTTOM || $CRITICAL_BOTTOM -gt $WARNING_BOTTOM ]]
then
        echo ""
        echo "$BOTTOM_THRESHOLD_USAGE"
        echo ""
        echo "Usage: $USAGE"
        echo ""
        exit 0
fi
QUERY_RUNNER_PATH=`echo ${QUERY_RUNNER_PATH%/}`
RESULT=`cd ${QUERY_RUNNER_PATH} && java -jar ./sqlScriptRunner.jar $QUERY_ID | tail -2 | head -1`

if [[ "$RESULT" -gt  $CRITICAL_THRESHOLD ]]
        then
                echo "CRITICAL: result is $RESULT|result=$RESULT;$WARNING_THRESHOLD;$CRITICAL_THRESHOLD;0;0"
                exit 2
fi
if [[ "$RESULT" -ge  $WARNING_THRESHOLD ]]
        then
                echo "WARNING: result is $RESULT|result=$RESULT;$WARNING_THRESHOLD;$CRITICAL_THRESHOLD;0;0"
                exit 1
fi
if [[ "$RESULT" -gt  $WARNING_BOTTOM ]] 
        then
                echo "OK: result is $RESULT|result=$RESULT;$WARNING_THRESHOLD;$CRITICAL_THRESHOLD;0;0"
                exit 0
fi
if [[ "$RESULT" -gt  $CRITICAL_BOTTOM ]] 
        then
                echo "OK:result is $RESULT|result=$RESULT;$WARNING_THRESHOLD;$CRITICAL_THRESHOLD;0;0"
                exit 0
fi
if [[ "$RESULT" -le  $CRITICAL_BOTTOM ]] 
        then
                echo "CRITICAL: result is $RESULT|result=$RESULT;$WARNING_THRESHOLD;$CRITICAL_THRESHOLD;0;0"
                exit 2
fi
