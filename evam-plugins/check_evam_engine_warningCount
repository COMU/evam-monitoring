#!/bin/bash

RUN_DIR_PATH=$PWD
source /etc/evam.conf

USAGE="`basename $0` [-h|--help]<help> [-w|--warning]<qsize> [-c|--critical]<qsize>"
THRESHOLD_USAGE="WARNING threshold must be less than CRITICAL: `basename $0` $*"

critical=""
warning=""
STATE_OK=0
STATE_WARNING=1
STATE_CRITICAL=2
STATE_UNKNOWN=3



PROGNAME=`basename $0`

print_help(){
        echo "$PROGNAME is a Nagios Plugin to check engine warning log sizes"
        echo "See below for available options."
        echo "Options:"
        echo "  -w/--warning)"
        echo "          Defines warning threshold of log count"
        echo "  -c/--critical)"
        echo "          Defines critical threshold of log count"
    
}



# print usage
if [[ $# -lt 2 && $1 -ne "-h" ]]
then
        echo ""
        echo "Wrong Syntax: `basename $0` $*"
        echo ""
        echo "Usage: $USAGE"
        echo ""
        exit 0
fi
# read input
while [[ $# -gt 0 ]]
  do
        case "$1" in
	       -h|--help)
		print_help
		exit 3
	;;
               -w|--warning)
               shift
               warning=$1
        ;;
               -c|--critical)
               shift
               critical=$1
        ;;
        esac
        shift
  done
# verify input
if [[ $warning -eq $critical || $critical -lt $warning ]]
then
        echo ""
        echo "$THRESHOLD_USAGE"
        echo ""
        echo "Usage: $USAGE"
        echo ""
        exit 0
fi
if [[ -e $EVAM_NAGIOS_WARNING_FILE ]]
	then
		OLD_LOG_TIME=`ls -l $EVAM_NAGIOS_WARNING_FILE | cut -d" " -f8`
		#OLD_LOG_TIME="23:56"
                OLD_LOG_HOUR=`echo "$OLD_LOG_TIME" | cut -d":" -f1`
                OLD_LOG_MINUTE=`echo "$OLD_LOG_TIME" | cut -d":" -f2`
fi
touch $EVAM_NAGIOS_WARNING_FILE

if [[ "$?" -eq 0 ]]
        then
                NAGIOS_LOG_LINE=`wc -l $EVAM_NAGIOS_WARNING_FILE | cut -d" " -f1`
                if [[ "$NAGIOS_LOG_LINE" -eq 0 ]]
                        then
                		grep WARN $EVAM_ENGINE_PATH/log$ENGINE_ID/evam.log | wc -l >> $EVAM_NAGIOS_WARNING_FILE
                                echo "WARNING: older warning log not found.|warningCount=0;$warning;$critical;0;0"
				exit 1
                else
				CONTROL_MINUTE=`expr 60 - $EVAM_NAGIOS_WARNING_INTERVAL`
				if [[ "$OLD_LOG_HOUR" -eq 23 ]] && [[ "$OLD_LOG_MINUTE" -gt "$CONTROL_MINUTE" ]]
					then
						CURRENT_MINUTE=`date '+%M'`
						#CURRENT_MINUTE="1"
						if [[ "$CURRENT_MINUTE" -lt $EVAM_NAGIOS_WARNING_INTERVAL ]]
							then
							PASSED_PERCENTAGE=`expr $CURRENT_MINUTE "*" 100 "/" $EVAM_NAGIOS_WARNING_INTERVAL`
							critical=`expr $critical "*" $PASSED_PERCENTAGE "/" 100`
							warning=`expr $warning "*" $PASSED_PERCENTAGE "/" 100`
						fi
						OLD_WARNING_COUNT="0"
					else
						OLD_WARNING_COUNT=`tail -1 $EVAM_NAGIOS_WARNING_FILE | cut -d" " -f1`
				fi
				NEW_WARNING_COUNT=`grep WARN $EVAM_ENGINE_PATH/log$ENGINE_ID/evam.log | wc -l`
				NEW_WARNING_RECORD="$NEW_WARNING_COUNT `date`"
				echo "$NEW_WARNING_RECORD" >> $EVAM_NAGIOS_WARNING_FILE
                                LOG_WARNING_COUNT=`expr $NEW_WARNING_COUNT - $OLD_WARNING_COUNT`

				if [[ "$LOG_WARNING_COUNT" -ge  $critical ]]
					then
						echo "CRITICAL: Warning count is $LOG_WARNING_COUNT|warningCount=$LOG_WARNING_COUNT;$warning;$critical;0;0"
						exit 2
				fi
				if [[ "$LOG_WARNING_COUNT" -ge  $warning ]]
					then
						echo "WARNING: Warning count is $LOG_WARNING_COUNT|warningCount=$LOG_WARNING_COUNT;$warning;$critical;0;0"
						exit 1
				fi
				if [[ "$LOG_WARNING_COUNT" -lt  $warning ]]
					then
						echo "OK: Warning count is $LOG_WARNING_COUNT|warningCount=$LOG_WARNING_COUNT;$warning;$critical;0;0"
						exit 0
				fi
								
		fi
else
		echo "CRITICAL: cannot create temp file for warning counts|warningCount=0;$warning;$critical;0;0"
		exit 2
fi


